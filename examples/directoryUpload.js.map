{"version":3,"sources":["webpack:///./examples/directoryUpload.js"],"names":["Test","props","uploaderProps","action","data","a","b","headers","Authorization","directory","beforeUpload","file","console","log","name","onStart","onSuccess","onProgress","step","Math","round","percent","onError","err","margin","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;;IAEMA,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yKACXA,KADW;;AAEjB,UAAKC,aAAL,GAAqB;AACnBC,cAAQ,YADW;AAEnBC,YAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAFa;AAGnBC,eAAS;AACPC,uBAAe;AADR,OAHU;AAMnBC,iBAAW,IANQ;AAOnBC,kBAPmB,wBAONC,IAPM,EAOA;AACjBC,gBAAQC,GAAR,CAAY,cAAZ,EAA4BF,KAAKG,IAAjC;AACD,OATkB;;AAUnBC,eAAS,iBAACJ,IAAD,EAAU;AACjBC,gBAAQC,GAAR,CAAY,SAAZ,EAAuBF,KAAKG,IAA5B;AACA;AACD,OAbkB;AAcnBE,eAdmB,qBAcTL,IAdS,EAcH;AACdC,gBAAQC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB;AACD,OAhBkB;AAiBnBM,gBAjBmB,sBAiBRC,IAjBQ,EAiBFP,IAjBE,EAiBI;AACrBC,gBAAQC,GAAR,CAAY,YAAZ,EAA0BM,KAAKC,KAAL,CAAWF,KAAKG,OAAhB,CAA1B,EAAoDV,KAAKG,IAAzD;AACD,OAnBkB;AAoBnBQ,aApBmB,mBAoBXC,GApBW,EAoBN;AACXX,gBAAQC,GAAR,CAAY,SAAZ,EAAuBU,GAAvB;AACD;AAtBkB,KAArB;AAFiB;AA0BlB;;;;6BACQ;AACP,aAAQ;AAAA;AAAA;AACN,iBAAO;AACLC,oBAAQ;AADH;AADD;AAMN;AAAA;AAAA;AACE;AAAC,uEAAD;AAAA,sFAAY,KAAKtB,aAAjB,IAAgC,KAAI,OAApC;AAA4C;AAAA;AAAA;AAAA;AAAA;AAA5C;AADF;AANM,OAAR;AAWD;;;;EAxCgBuB,6CAAKA,CAACC,S;;AA2CzBC,iDAAQA,CAACC,MAAT,CAAgB,4DAAC,IAAD,OAAhB,EAAyBC,SAASC,cAAT,CAAwB,iBAAxB,CAAzB,E","file":"examples/directoryUpload.js","sourcesContent":["/* eslint no-console:0 */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Upload from '@gem-mine/rc-upload';\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uploaderProps = {\n      action: '/upload.do',\n      data: { a: 1, b: 2 },\n      headers: {\n        Authorization: 'xxxxxxx',\n      },\n      directory: true,\n      beforeUpload(file) {\n        console.log('beforeUpload', file.name);\n      },\n      onStart: (file) => {\n        console.log('onStart', file.name);\n        // this.refs.inner.abort(file);\n      },\n      onSuccess(file) {\n        console.log('onSuccess', file);\n      },\n      onProgress(step, file) {\n        console.log('onProgress', Math.round(step.percent), file.name);\n      },\n      onError(err) {\n        console.log('onError', err);\n      },\n    };\n  }\n  render() {\n    return (<div\n      style={{\n        margin: 100,\n      }}\n    >\n\n      <div>\n        <Upload {...this.uploaderProps} ref=\"inner\"><a>开始上传</a></Upload>\n      </div>\n\n    </div>);\n  }\n}\n\nReactDOM.render(<Test/>, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/directoryUpload.js"],"sourceRoot":""}